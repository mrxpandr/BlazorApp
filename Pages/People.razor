@page "/people"

@using DataLibrary
@using BlazorApp.Models
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config

<h3>People</h3>

<button class="btn btn-primary" @onclick="InsertData">Insert</button>
<button class="btn btn-warning" @onclick="UpdateData">Update</button>
<button class="btn btn-danger" @onclick="DeleteData">Delete</button>

@if(people == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var p in people)
    {
        <p>@p.name</p>
    }
}

@code {
    List<PersonModel> people;

    private async Task InsertData()
    {
        string sql = "INSERT INTO mrx(name, game) VALUES(@name, @game);";

        await _data.SaveData(sql, new { name="GG", game="dota" }, _config.GetConnectionString("default"));

        await OnInitializedAsync();
    }

    private async Task UpdateData()
    {
        string sql = "UPDATE mrx SET name = @name WHERE game=@game;";

        await _data.SaveData(sql, new { name="GGWP", game= "dota" }, _config.GetConnectionString("default"));

        await OnInitializedAsync();
    }

    private async Task DeleteData()
    {
        string sql = "DELETE FROM mrx WHERE game=@game;";

        await _data.SaveData(sql, new { game="dota" }, _config.GetConnectionString("default"));

        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string sql = "SELECT * FROM mrx;";

        people = await _data.LoadData<PersonModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }
}
